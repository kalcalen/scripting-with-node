[
   {
      "name": "standInLine",
      "desc": "Input a new number to to hold its place in line",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 121
   },
   {
      "name": "shoppingList",
      "desc": "Create and add onto the shopping list",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 120
   },
   {
      "name": "arrayUnshift",
      "desc": "Manipulate arrays with .unshift()",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 119
   },
   {
      "name": "arrayShift",
      "desc": "Manipulate arrays with .shift()",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 118
   },
   {
      "name": "arrayPop",
      "desc": "Manipulate arrays with .pop()",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 117
   },
   {
      "name": "arrayPush",
      "desc": "Manipulate Arrays with push(). Input any number to push into the array.",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 116
   },
   {
      "name": "bracketNotationNth2Last",
      "desc": "Use bracket notation to find the Nth character from the last character",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 115
   },
   {
      "name": "bracketNotationLast",
      "desc": "Input word or number to find it's last value.",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 114
   },
   {
      "name": "bracketNotationNth",
      "desc": "Input character, then number for place value.",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 113
   },
   {
      "name": "bracketNotation",
      "desc": "Input character to get the value of the first letter of the string.",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 112
   },
   {
      "name": "findLengthString",
      "desc": "Find the Length of a string. Input variable to see amount of characters.",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 111
   },
   {
      "name": "ConcatenatingStringsVariables",
      "desc": "Set myName and myHobby to complete the string",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 110
   },
   {
      "name": "concatenatingPlusEquals",
      "desc": "Concatenate strings using +=",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 109
   },
   {
      "name": "Concatenating",
      "desc": "Concatenate using a string Plus operator (+)",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 108
   },
   {
      "name": "divideDecimal",
      "desc": "Divide two numbers with decimals",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 107
   },
   {
      "name": "multiplyDecimal",
      "desc": "Multiply two numbers using decimals",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 106
   },
   {
      "name": "Decrement",
      "desc": "Input any number to decrement 1",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 105
   },
   {
      "name": "Increment",
      "desc": "Input any number to increment by 1",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 104
   },
   {
      "name": "divide",
      "desc": "Divide the first number by the second number",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 103
   },
   {
      "name": "multiply",
      "desc": "multiply the two values together",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 102
   },
   {
      "name": "subtract",
      "desc": "subtract the first number from the second number",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 101
   },
   {
      "name": "add",
      "desc": "Add two values together",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 100
   },
   {
      "name": "typeOf",
      "desc": "n",
      "inputs": 1,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 206
   },
   {
      "name": "indexOf",
      "desc": "n",
      "inputs": 1,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 205
   },
   {
      "name": "spliceAdd",
      "desc": "n",
      "inputs": 1,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 204
   },
   {
      "name": "spliceRemove",
      "desc": "n",
      "inputs": 1,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 203
   },
   {
      "name": "randomRange",
      "desc": "n",
      "inputs": 2,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 202
   },
   {
      "name": "lookUpProfile",
      "desc": "n",
      "inputs": 2,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 201
   },
   {
      "name": "countingCards",
      "desc": "n",
      "inputs": 1,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 200
   },
   {
      "name": "includesMethod",
      "desc": "Use includes method to determine whether an array includes a certain value among its entries. Input a name array to determine if it is in the array or not.",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 110
   },
   {
      "name": "mapMethod",
      "desc": "Use the map Method to Extract Data from an ArrayPassed. Input either a name, position, or team from the array to return their information.",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 109
   },
   {
      "name": "someMethod",
      "desc": "Use the some Method to check that any elements in an array meet a criteria. Input an array of numbers to determine if they're higher than 50.",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 108
   },
   {
      "name": "everyMethod",
      "desc": "Use the every method to check that every element in an array meets a criteria. Input an array of numbers to determine if it is positive. (Example: [1, -53, 73, 23, -6])",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 107
   },
   {
      "name": "joinMethod",
      "desc": "Combine an array into a string using the join method. Input a string with no spaces to separate the array elements in the string (Example: (\"May-the-force-be-with-you\"))",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 106
   },
   {
      "name": "splitMethod",
      "desc": "Split a string into an array using the split method. Input string (Example: \"Copy and paste this into input\")",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 105
   },
   {
      "name": "concatNoPush",
      "desc": "Add elements to the end of an Array using concat instead of push. Complete the given Array",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 104
   },
   {
      "name": "combineConcat",
      "desc": "Combine two arrays using the concat method. Input two arrays.",
      "inputs": 2,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 103
   },
   {
      "name": "sliceNoSplice",
      "desc": "Remove elements from an array using slice instead of splice.",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 102
   },
   {
      "name": "sliceMethod",
      "desc": "Return part of the array using slice method. [Pizza, Burgers, Ice Cream, HotDogs, Tacos]",
      "inputs": 2,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 101
   },
   {
      "name": "filterMethod",
      "desc": "Input a number into the existing array to return all odd numbers, including your number [35, 87, 22, 96, 22, 66, 8, \"Your input\"]",
      "inputs": 1,
      "type": "functions",
      "typeNum": 100,
      "isFavorite": false,
      "order": 100
   }
]
